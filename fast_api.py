#**FastAPI** Â ile temel yapÄ± kurulumu AÅŸaÄŸÄ±daki uÃ§ noktalarÄ±n oluÅŸturulmasÄ±:
#Endpoint	Method	AÃ§Ä±klama

#/products	 GET	ÃœrÃ¼n listesini dÃ¶ner

#/predict	POST	Tahmin yapÄ±lmasÄ±nÄ± saÄŸlar

#/retrain	Â  Â  Â  Â  Â  Â  POST	Modeli yeniden eÄŸitir (opsiyonel)

#/sales_summary	GET 	SatÄ±ÅŸ Ã¶zet verisini dÃ¶ner

#predict uÃ§ noktasÄ±:

#KullanÄ±cÄ±dan Ã¼rÃ¼n, tarih ve mÃ¼ÅŸteri bilgilerini alÄ±r

#Modeli yÃ¼kler ve tahmini yapar

#Tahmini sonuÃ§ olarak dÃ¶ner

#Swagger dokÃ¼mantasyonun kontrolÃ¼


from fastapi import FastAPI, HTTPException, Body
from pydantic import BaseModel
import pandas as pd
import joblib
from database_connect import get_data_from_db
import numpy as np


app = FastAPI(title="Price Predict Api", 
              description="Northwind DB price predict Api's")










"""

joblib.dump(model, "credit_model.pkl")

# ğŸš€ FastAPI uygulamasÄ±
app = FastAPI(title="Credit Approveal API", description="credit approval")

# ğŸ“¦ GiriÅŸ verisi iÃ§in Pydantic modeli
class Applicant(BaseModel):
    age: int
    income: float  # int de olabilir
    credit_score: int
    has_default: int

# ğŸ”® Tahmin endpoint'i (tek dekoratÃ¶r!)
@app.post("/predict", tags=["prediction"])
def predict_approval(applicant: Applicant):
    data_model = joblib.load("credit_model.pkl")
    input_data = [[
        applicant.age,
        applicant.income,
        applicant.credit_score,
        applicant.has_default
    ]]
    prediction = data_model.predict(input_data)[0]
    result = "Approved" if prediction == 1 else "Rejected"

    return {
        "prediction": result,
        "details": {
            "age": applicant.age,
            "income": applicant.income,
            "credit_score": applicant.credit_score,
            "has_default": applicant.has_default
        }
    }

# ğŸ§  AR-GE Ã–devleri
# Ã–dev 1 - ARGE : DecisionTrees'de gini yerine alternatif ne kullanÄ±labilir? FarkÄ± nedir?
# Ã–dev 2 - ARGE : Pydantic ile baÅŸka neler yapÄ±labilir? 
# Ã–dev 3 - ARGE : Faker kÃ¼tÃ¼phanesi ne iÅŸe yarar? DetaylÄ± araÅŸtÄ±rÄ±nÄ±z."
"""